server:
  port: 20000

spring:
  application:
    #后面可能有很多个gateway，所以这里应用名使用e-commerce-gateway
    name: e-commerce-gateway
  cloud:
    gateway:
      discovery:
        locator:
          #标志启用DiscoveryClient 服务发现
          enabled: true
      routes: #这里配置路由，可以配置多个路由，在代码中是List<RouteDefinition> routes
        - id: member_route01 #路由的id，程序员自己配置，要求唯一
          #gateway最终访问的url是url = uri+path
          #匹配后，提供服务的路由地址：也可以是外网比如：http://www.bing.com
          #比如：客户端/浏览器请求的url为 http://localhost:20000/member/get/1
          #如果根据路径Path匹配成功了，最终访问的url/转发url就是url=http://localhost:10000/member/get/1
          #如果匹配失败，则由gateway返回一个404的错误信息给到客户端
          #疑问：这里的uri是固定的，在当前情况下，可以不使用Eureka Server，后面会改进，会使用灵活的方法配置，就会使用到Eureka Server
          #uri: http://localhost:10000
          #使用动态路由，这里指定的是服务名，需要用小写
          #1.lb 协议名 member-service-provider 是注册到Eureka Server的服务名
          #2.默认情况下，默认负载均衡算法是轮询
          uri: lb://member-service-provider
          predicates: #断言，可以有多种形式的断言
            - Path=/member/get/**
            #断言，要求：只有2025-11-18 12:35:50 之后的请求才进行匹配/转发，不满足该要求的，不处理
            #- After=2025-11-18T12:35:50.593+08:00[Asia/Shanghai]
            #断言：要求：只有2025-08-18 12:35:50 之前的请求才进行匹配/转发，不满足该要求的，不处理
            #- Before=2025-08-18T12:35:50.593+08:00[Asia/Shanghai]
            #- Before=2025-09-18T12:35:50.593+08:00[Asia/Shanghai]
            #断言：要求：只有2025-08-18 12:35:50 和 只有2025-09-16 12:35:50的请求才进行匹配/转发，不满足该要求的，不处理
            #- Between=2025-08-18T12:35:50.593+08:00[Asia/Shanghai],2025-09-16T12:35:50.593+08:00[Asia/Shanghai]
            #- Between=2025-08-18T12:35:50.593+08:00[Asia/Shanghai],2025-09-18T12:35:50.593+08:00[Asia/Shanghai]
            #断言：要求：请求带有cookie键：user，值：tom 才匹配/断言成功，使用postman测试
            #- Cookie=user, tom
            #断言：要求：请求头Header有X-Request-Id，并且值是hello才匹配/断言成功
            #- Header=X-Request-Id, hello
            #断言：要求：请求Host是**.tom.**才匹配/断言成功，比如请求的Host是www.tom.com，
            #使用postman测试，在Header中添加key=Host，value=www.tom.com
            #- Host=**.tom.**
            #断言：要求：请求是Get/Post方式才匹配/断言成功，请求方式有多个，用,隔开
            - Method=POST,GET
        - id: member_route02 #路由的id，程序员自己配置，要求唯一
          #uri: http://localhost:10000
          uri: lb://member-service-provider
          predicates: #断言，可以有多种形式的断言
            #这时如果浏览器/客户端 访问gateway 的url http://localhost:20000/member/save
            #如果匹配Path成功，就进行组合，最终访问的url为：http://localhost:10000/member/save
            - Path=/member/save

#配置Eureka Client
eureka:
  instance:
    hostname: e-commerce-service #这里先配置
  client:
    register-with-eureka: true #将自己注册到Eureka-Server
    #表示从Eureka Server获取/抓取注册信息，如果是单节点，是可以不配置，
    #如果是一个集群，则必须配置true，才能配合Ribbon使用负载均衡功能
    fetch-registry: true
    service-url:
      #defaultZone: http://eureka9001.com:9001/eureka,http://eureka9002.com:9002/eureka
      #这里为了方便，只使用Eureka Server的单机环境，即只使用9001
      #9001和9002都需要启动
      defaultZone: http://eureka9001.com:9001/eureka